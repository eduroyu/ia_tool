code,label
"class Example extends React.Component { constructor(props) { super(props); this.state = { value: props.initialValue }; } render() { return <div>{this.state.value}</div>; } }",1
"class Example extends React.Component { constructor(props) { super(props); this.state = { value: this.props.initialValue }; } render() { return <div>{this.state.value}</div>; } }",1
"class Example extends React.Component { constructor(props) { super(props); this.state = { value: this.props.valueFromParent }; } render() { return <div>{this.state.value}</div>; } }",1
"class Example extends React.Component { constructor(props) { super(props); this.state = { value: this.props.initialValue }; } render() { return <div>{this.props.initialValue}</div>; } }",1
"class Example extends React.Component { constructor(props) { super(props); this.state = { value: this.props.valueFromParent }; } render() { return <div>{this.props.valueFromParent}</div>; } }",1
"class Example extends React.Component { constructor(props) { super(props); this.state = { value: "default" }; } render() { return <div>{this.state.value}</div>; } }",0
"class Example extends React.Component { constructor(props) { super(props); this.state = { value: "default" }; } render() { return <div>{this.props.initialValue}</div>; } }",0
"class Example extends React.Component { constructor(props) { super(props); this.state = { data: props.data }; } render() { return <div>{this.state.data}</div>; } }",1
"class Example extends React.Component { constructor(props) { super(props); this.state = { data: this.props.data }; } render() { return <div>{this.state.data}</div>; } }",1
"class Example extends React.Component { constructor(props) { super(props); this.state = { data: this.props.dataFromParent }; } render() { return <div>{this.state.data}</div>; } }",1
"class Example extends React.Component { constructor(props) { super(props); this.state = { data: props.data }; } render() { return <div>{this.props.data}</div>; } }",1
"class Example extends React.Component { constructor(props) { super(props); this.state = { data: this.props.data }; } render() { return <div>{this.props.dataFromParent}</div>; } }",1
"class Example extends React.Component { constructor(props) { super(props); this.state = { data: "default" }; } render() { return <div>{this.state.data}</div>; } }",0
"class Example extends React.Component { constructor(props) { super(props); this.state = { data: "default" }; } render() { return <div>{this.props.data}</div>; } }",0
"class Example extends React.Component { constructor(props) { super(props); this.state = { count: props.initialCount }; } render() { return <div>{this.state.count}</div>; } }",1
"class Example extends React.Component { constructor(props) { super(props); this.state = { count: this.props.initialCount }; } render() { return <div>{this.state.count}</div>; } }",1
"class Example extends React.Component { constructor(props) { super(props); this.state = { count: this.props.countFromParent }; } render() { return <div>{this.state.count}</div>; } }",1
"class Example extends React.Component { constructor(props) { super(props); this.state = { count: props.initialCount }; } render() { return <div>{this.props.initialCount}</div>; } }",1
"class Example extends React.Component { constructor(props) { super(props); this.state = { count: this.props.countFromParent }; } render() { return <div>{this.props.countFromParent}</div>; } }",1
"class Example extends React.Component { constructor(props) { super(props); this.state = { count: 0 }; } render() { return <div>{this.state.count}</div>; } }",0
"class Example extends React.Component { constructor(props) { super(props); this.state = { count: 0 }; } render() { return <div>{this.props.initialCount}</div>; } }",0
"class Example extends React.Component { constructor(props) { super(props); this.state = { isOpen: props.isOpen }; } render() { return <div>{this.state.isOpen}</div>; } }",1
"class Example extends React.Component { constructor(props) { super(props); this.state = { isOpen: this.props.isOpen }; } render() { return <div>{this.state.isOpen}</div>; } }",1
"class Example extends React.Component { constructor(props) { super(props); this.state = { isOpen: this.props.isOpenFromParent }; } render() { return <div>{this.state.isOpen}</div>; } }",1
"class Example extends React.Component { constructor(props) { super(props); this.state = { isOpen: props.isOpen }; } render() { return <div>{this.props.isOpen}</div>; } }",1
"class Example extends React.Component { constructor(props) { super(props); this.state = { isOpen: this.props.isOpen }; } render() { return <div>{this.props.isOpenFromParent}</div>; } }",1
"class Example extends React.Component { constructor(props) { super(props); this.state = { isOpen: false }; } render() { return <div>{this.state.isOpen}</div>; } }",0
"class Example extends React.Component { constructor(props) { super(props); this.state = { isOpen: false }; } render() { return <div>{this.props.isOpen}</div>; } }",0
"class Example extends React.Component { constructor(props) { super(props); this.state = { isVisible: props.isVisible }; } render() { return <div>{this.state.isVisible}</div>; } }",1
"class Example extends React.Component { constructor(props) { super(props); this.state = { isVisible: this.props.isVisible }; } render() { return <div>{this.state.isVisible}</div>; } }",1
"class Example extends React.Component { constructor(props) { super(props); this.state = { isVisible: this.props.isVisibleFromParent }; } render() { return <div>{this.state.isVisible}</div>; } }",1
"class Example extends React.Component { constructor(props) { super(props); this.state = { isVisible: props.isVisible }; } render() { return <div>{this.props.isVisible}</div>; } }",1
"class Example extends React.Component { constructor(props) { super(props); this.state = { isVisible: this.props.isVisible }; } render() { return <div>{this.props.isVisibleFromParent}</div>; } }",1
"class Example extends React.Component { constructor(props) { super(props); this.state = { isVisible: true }; } render() { return <div>{this.state.isVisible}</div>; } }",0
"class Example extends React.Component { constructor(props) { super(props); this.state = { isVisible: true }; } render() { return <div>{this.props.isVisible}</div>; } }",0
"class Example extends React.Component { constructor(props) { super(props); this.state = { isVisible: "true" }; } render() { return <div>{this.state.isVisible}</div>; } }",0
"class Example extends React.Component { constructor(props) { super(props); this.state = { isVisible: "false" }; } render() { return <div>{this.state.isVisible}</div>; } }",0
"class Example extends React.Component { constructor(props) { super(props); this.state = { isVisible: true }; } render() { return <div>{this.state.isVisible.toString()}</div>; } }",0
"class Example extends React.Component { constructor(props) { super(props); this.state = { isVisible: false }; } render() { return <div>{this.state.isVisible.toString()}</div>; } }",0
